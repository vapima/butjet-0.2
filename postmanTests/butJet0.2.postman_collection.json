{
	"info": {
		"_postman_id": "5d7784d9-d5ec-4184-bdfa-64bae9d99b6b",
		"name": "butJet0.2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Person tests (positive)",
			"item": [
				{
					"name": "/person/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "171cb4a0-b231-4f49-8840-eba29a7a7fdc",
								"exec": [
									"pm.test(\"Name is  not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.name).not.eq(undefined);",
									"});",
									"pm.test(\"Id is not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.id).not.eq(undefined);",
									"});",
									"pm.test(\"Body have id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"pm.test(\"Body have name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "41d40537-6ff3-4bb8-9382-2a6772692fec",
								"exec": [
									"pm.environment.set(\"name\", \"PmTestName\"+Math.floor(Math.random() * 10000)+\"@gmail.com\");",
									"pm.environment.set(\"password\", \"PmTestPassword\"+Math.floor(Math.random() * 10000));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{name}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/person/token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "171cb4a0-b231-4f49-8840-eba29a7a7fdc",
								"exec": [
									"loc = pm.response.headers.get(\"Token\");",
									"postman.setEnvironmentVariable(\"token\",  loc);",
									"pm.test(\"Token is not Null\", function() {",
									"pm.expect(loc).not.eq(undefined);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{name}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/token",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "/person/testToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "317b5ee8-4a15-48c1-b580-d87f1e4b63b3",
								"exec": [
									"pm.test(\"Name is  not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.name).not.eq(undefined);",
									"});",
									"pm.test(\"Id is not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.id).not.eq(undefined);",
									"});",
									"pm.test(\"Body have id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"pm.test(\"Body have name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b82592b9-1c0b-4091-9a7a-7d0aee89d694",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/person/token?type=telegram",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bc3bffd-bb27-41d9-8905-fca32fd4c74a",
								"exec": [
									"loc = pm.response.headers.get(\"Token\");",
									"postman.setEnvironmentVariable(\"token\",  loc);",
									"pm.test(\"Token is not Null\", function() {",
									"pm.expect(loc).not.eq(undefined);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{name}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/token?type=telegram",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								"token"
							],
							"query": [
								{
									"key": "type",
									"value": "telegram"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/person/tokenByTokenForTelegram",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad503c0a-0edf-4f32-a2d5-950e1ade8c87",
								"exec": [
									"loc = pm.response.headers.get(\"Token\");",
									"postman.setEnvironmentVariable(\"token\",  loc);",
									"pm.test(\"Token is not Null\", function() {",
									"pm.expect(loc).not.eq(undefined);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/token",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "/person/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "171cb4a0-b231-4f49-8840-eba29a7a7fdc",
								"exec": [
									"pm.test(\"Name is  not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.name).not.eq(undefined);",
									"});",
									"pm.test(\"Id is not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.id).not.eq(undefined);",
									"});",
									"pm.test(\"Body have id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"pm.test(\"Body have name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "65f093b2-f0e1-419b-b0f1-20468d345890",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/person/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "171cb4a0-b231-4f49-8840-eba29a7a7fdc",
								"exec": [
									"pm.test(\"Name is  not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.name).not.eq(undefined);",
									"});",
									"pm.test(\"Id is not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.id).not.eq(undefined);",
									"});",
									"pm.test(\"Body have id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"pm.test(\"Body have name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bd07c2e0-c35e-46f1-8e17-921e3bda85c4",
								"exec": [
									"pm.environment.set(\"newPassword\", \"PmTestNewPassword\"+Math.floor(Math.random() * 10000));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "password",
								"value": "{{newPassword}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/person/rdn",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "143da82a-e266-4be2-9b97-66c69aa917a0",
								"exec": [
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).not;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8d02dedd-cd6c-4d6d-aa7c-5d69c97f2fac",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/rdn",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								"rdn"
							]
						}
					},
					"response": []
				},
				{
					"name": "/person/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "171cb4a0-b231-4f49-8840-eba29a7a7fdc",
								"exec": [
									"pm.test(\"Status is deleted\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.status).eq(\"deleted\");",
									"});",
									"pm.test(\"Status is deleted\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.rows).eq('1');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bd07c2e0-c35e-46f1-8e17-921e3bda85c4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								""
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5d6b0dc9-d4a9-424c-b596-a5f53f75f3d4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "081f89b4-3c95-4725-9148-1e4aa0a5f8b0",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Acc tests (positive)",
			"item": [
				{
					"name": "create_person",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "171cb4a0-b231-4f49-8840-eba29a7a7fdc",
								"exec": [
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "41d40537-6ff3-4bb8-9382-2a6772692fec",
								"exec": [
									"pm.environment.set(\"name\", \"PmTestName\"+Math.floor(Math.random() * 100)+\"@gmail.com\");",
									"pm.environment.set(\"password\", \"PmTestPassword\"+Math.floor(Math.random() * 100));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{name}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "take_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "196b3790-cf30-402f-8dc8-a70d7ec3511f",
								"exec": [
									"loc = pm.response.headers.get(\"Token\");",
									"postman.setEnvironmentVariable(\"token\",  loc);",
									"pm.test(\"Token is not Null\", function() {",
									"pm.expect(loc).not.eq(undefined);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{name}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/token",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "/acc/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "171cb4a0-b231-4f49-8840-eba29a7a7fdc",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"acc\", jsonData.id);",
									"        jsonData=pm.response.json();",
									"        pm.expect(jsonData.id).not.eq(undefined);",
									"        pm.expect(jsonData.name).not.eq(undefined);",
									"        pm.expect(jsonData.balance).eq(0);",
									"        pm.expect(jsonData.changeTime).not.eq(undefined);",
									"        pm.expect(jsonData.active).not.eq(undefined);",
									"        pm.expect(jsonData.personId).not.eq(undefined);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bd07c2e0-c35e-46f1-8e17-921e3bda85c4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":{{$randomLastName}},\n    \"active\": {{$randomBoolean}},\n    \"balance\" : 0,\n    \"changeTime\" : \"2021-09-21T11:52:28\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/acc/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"acc",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/acc/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b742004-de1c-4b75-9411-2124271fb5bf",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"acc\", jsonData.id);",
									"        jsonData=pm.response.json();",
									"        pm.expect(jsonData.id).not.eq(undefined);",
									"        pm.expect(jsonData.name).not.eq(undefined);",
									"        pm.expect(jsonData.balance).eq(0);",
									"        pm.expect(jsonData.changeTime).not.eq(undefined);",
									"        pm.expect(jsonData.active).not.eq(undefined);",
									"        pm.expect(jsonData.personId).not.eq(undefined);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6649964e-fbea-4053-8e7e-ca78f55ec65c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":{{$randomLastName}},\n    \"active\": {{$randomBoolean}},\n    \"balance\" : 0,\n    \"changeTime\" : \"2021-09-21T11:52:28\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/acc/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"acc",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/acc/all/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45ada212-dc7c-4818-b82c-62984b00b57b",
								"exec": [
									"",
									"pm.test('Matches accs', () => {",
									"    _.each(pm.response.json(), (arrItem) => {",
									"        pm.expect(arrItem.id).not.eq(undefined);",
									"        pm.expect(arrItem.name).not.eq(undefined);",
									"        pm.expect(arrItem.balance).eq(0);",
									"        pm.expect(arrItem.changeTime).not.eq(undefined);",
									"        pm.expect(arrItem.active).not.eq(undefined);",
									"        pm.expect(arrItem.personId).not.eq(undefined);",
									"    })",
									"});",
									"responseJson = JSON.parse(responseBody);",
									"var list = responseJson.length;",
									" pm.expect(list).eq(2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ad5e77e6-87df-48c8-a76b-40af7eb899fd",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/acc/all/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"acc",
								"all",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/acc/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab2fa6bb-4e3b-48ec-a338-f6adde6bf0b5",
								"exec": [
									"        jsonData=pm.response.json();",
									"        pm.expect(jsonData.id).not.eq(undefined);",
									"        pm.expect(jsonData.name).not.eq(undefined);",
									"        pm.expect(jsonData.balance).eq(0);",
									"        pm.expect(jsonData.changeTime).not.eq(undefined);",
									"        pm.expect(jsonData.active).not.eq(undefined);",
									"        pm.expect(jsonData.personId).not.eq(undefined);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "99a65309-ed83-4dbd-9a16-61387fbcfa9e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/acc/{{acc}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"acc",
								"{{acc}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/acc/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96110d0f-c77d-4815-a4d0-4601bc41de20",
								"exec": [
									"        jsonData=pm.response.json();",
									"        pm.expect(jsonData.id).not.eq(undefined);",
									"        pm.expect(jsonData.name).eq(\"changeName\");",
									"        pm.expect(jsonData.balance).eq(0);",
									"        pm.expect(jsonData.changeTime).not.eq(undefined);",
									"        pm.expect(jsonData.active).not.eq(undefined);",
									"        pm.expect(jsonData.personId).not.eq(undefined);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fa3ade51-585c-4f7c-9dba-e5894574fe5b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"changeName\",\n    \"active\":{{$randomBoolean}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/acc/{{acc}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"acc",
								"{{acc}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "171cb4a0-b231-4f49-8840-eba29a7a7fdc",
								"exec": [
									"pm.test(\"Status is deleted\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.status).eq(\"deleted\");",
									"pm.expect(jsonData.rows).eq('1');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bd07c2e0-c35e-46f1-8e17-921e3bda85c4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								""
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "39e2058b-0e4e-458f-ba09-e4e879363dd2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3a304b00-8d24-4235-840d-f6525ffa3316",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "AccRec tests (positive)",
			"item": [
				{
					"name": "create_person",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4919554e-0e9e-421c-939d-3c09b7fb4a47",
								"exec": [
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4a7844dc-6675-4135-ab59-e652d414124a",
								"exec": [
									"pm.environment.set(\"name\", \"PmTestName\"+Math.floor(Math.random() * 100)+\"@gmail.com\");",
									"pm.environment.set(\"password\", \"PmTestPassword\"+Math.floor(Math.random() * 100));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{name}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "take_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "edefa91a-254d-41df-a0c3-cd77e457a6bd",
								"exec": [
									"loc = pm.response.headers.get(\"Token\");",
									"postman.setEnvironmentVariable(\"token\",  loc);",
									"pm.test(\"Token is not Null\", function() {",
									"pm.expect(loc).not.eq(undefined);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{name}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/token",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "/acc/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48d3f67a-9367-4095-8ef0-d76c70fb325a",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"acc\", jsonData.id);",
									"        jsonData=pm.response.json();",
									"        pm.expect(jsonData.id).not.eq(undefined);",
									"        pm.expect(jsonData.name).not.eq(undefined);",
									"        pm.expect(jsonData.balance).eq(0);",
									"        pm.expect(jsonData.changeTime).not.eq(undefined);",
									"        pm.expect(jsonData.active).not.eq(undefined);",
									"        pm.expect(jsonData.personId).not.eq(undefined);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1c602ade-0e75-4d59-9ae4-84307fc613c9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":{{$randomLastName}},\n    \"active\": {{$randomBoolean}},\n    \"balance\" : 0,\n    \"changeTime\" : \"2021-09-21T11:52:28\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/acc/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"acc",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/accrec/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec5272b3-ede7-4596-9ef9-c32632d41c97",
								"exec": [
									"jsonData=pm.response.json();",
									"        pm.expect(jsonData.id).not.eq(undefined);",
									"        pm.expect(jsonData.name).not.eq(undefined);",
									"        pm.expect(jsonData.balance).not.eq(0);",
									"        pm.expect(jsonData.changeTime).not.eq(undefined);",
									"        pm.expect(jsonData.active).not.eq(undefined);",
									"        pm.expect(jsonData.personId).not.eq(undefined);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f2640e4b-d0a6-4ec0-bff4-417ef8e504ed",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"balance\" : {{$randomInt}},\n    \"changeTime\" : \"2022-09-21T11:52:28\",\n    \"accId\" : {{acc}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/accrec/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"accrec",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/accrec/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fcd8c9a-ef86-479b-93eb-8dd8381af2a3",
								"exec": [
									"jsonData=pm.response.json();",
									"        pm.expect(jsonData.id).not.eq(undefined);",
									"        pm.expect(jsonData.name).not.eq(undefined);",
									"        pm.expect(jsonData.balance).not.eq(0);",
									"        pm.expect(jsonData.changeTime).not.eq(undefined);",
									"        pm.expect(jsonData.active).not.eq(undefined);",
									"        pm.expect(jsonData.personId).not.eq(undefined);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cdcadc8d-a61f-4ead-aab2-36fc90003771",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"balance\" : {{$randomInt}},\n    \"changeTime\" : \"2022-09-21T11:52:28\",\n    \"accId\" : {{acc}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/accrec/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"accrec",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/accrec/all/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2bab583-b631-4f29-9536-51013b549b90",
								"exec": [
									"",
									"pm.test('Matches accs', () => {",
									"    _.each(pm.response.json(), (arrItem) => {",
									"        pm.expect(arrItem.id).not.eq(undefined);",
									"        pm.expect(arrItem.balance).not.eq(undefined);",
									"        pm.expect(arrItem.changeTime).not.eq(undefined);",
									"        pm.expect(arrItem.accId).not.eq(undefined);",
									"        pm.expect(arrItem.personId).not.eq(undefined);",
									"        postman.setEnvironmentVariable(\"accrec\", arrItem.id);",
									"    })",
									"});",
									"responseJson = JSON.parse(responseBody);",
									"var list = responseJson.length;",
									" pm.expect(list).eq(2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3260a58d-e5c7-4eb8-ab11-df80eb9eeef6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/accrec/all/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"accrec",
								"all",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/accrec/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2bab583-b631-4f29-9536-51013b549b90",
								"exec": [
									"        jsonData=pm.response.json();",
									"        pm.expect(jsonData.id).not.eq(undefined);",
									"        pm.expect(jsonData.balance).not.eq(undefined);",
									"        pm.expect(jsonData.changeTime).not.eq(undefined);",
									"        pm.expect(jsonData.accId).not.eq(undefined);",
									"        pm.expect(jsonData.personId).not.eq(undefined);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3260a58d-e5c7-4eb8-ab11-df80eb9eeef6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/accrec/{{accrec}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"accrec",
								"{{accrec}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/accrec/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec5272b3-ede7-4596-9ef9-c32632d41c97",
								"exec": [
									"",
									"        jsonData=pm.response.json();",
									"        pm.expect(jsonData.id).not.eq(undefined);",
									"        pm.expect(jsonData.balance).eq(200);",
									"        pm.expect(jsonData.changeTime).not.eq(undefined);",
									"        pm.expect(jsonData.accId).not.eq(undefined);",
									"        pm.expect(jsonData.personId).not.eq(undefined);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f2640e4b-d0a6-4ec0-bff4-417ef8e504ed",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"balance\" : 200,\n    \"changeTime\" : \"2022-09-21T11:52:28\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/accrec/{{accrec}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"accrec",
								"{{accrec}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d074fc0-1499-4c8a-a698-568e4c21116d",
								"exec": [
									"pm.test(\"Status is deleted\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.status).eq(\"deleted\");",
									"pm.expect(jsonData.rows).eq('1');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0e00f1c2-5250-452d-b8bc-eb9d94cf655c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								""
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9264b314-e11f-4bae-82e6-82b9af1f84ee",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b0694aea-a59f-4013-8122-fb35adaa324b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Plan tests (positive)",
			"item": [
				{
					"name": "create_person",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7304e7b1-b18a-4efd-9cba-244ee08cafe7",
								"exec": [
									"pm.test(\"Name is  not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.name).not.eq(undefined);",
									"});",
									"pm.test(\"Id is not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.id).not.eq(undefined);",
									"});",
									"pm.test(\"Body have id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"pm.test(\"Body have name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1431e39f-61bb-4d7e-adb0-4e00c8f08832",
								"exec": [
									"pm.environment.set(\"name\", \"PmTestName\"+Math.floor(Math.random() * 100)+\"@gmail.com\");",
									"pm.environment.set(\"password\", \"PmTestPassword\"+Math.floor(Math.random() * 100));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{name}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "take_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a34872ea-ceef-4e56-9ea1-cb1ab4972f87",
								"exec": [
									"loc = pm.response.headers.get(\"Token\");",
									"postman.setEnvironmentVariable(\"token\",  loc);",
									"pm.test(\"Token is not Null\", function() {",
									"pm.expect(loc).not.eq(undefined);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{name}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/token",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "/plan/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f792e25-e79d-4380-ad47-66b5875184cc",
								"exec": [
									"pm.test(\"Name is  not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.name).not.eq(undefined);",
									"});",
									"pm.test(\"Id is not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.id).not.eq(undefined);",
									"});",
									"pm.test(\"Body have id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"pm.test(\"Body have name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});",
									"pm.test(\"Blance is 100\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.balance).eq(100);",
									"});",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"plan\", jsonData.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2f9526c0-280d-45e9-a682-8eae62adb733",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomUserName}}\",\n    \"balance\": 100,\n    \"dateExpiration\":\"2021-09-14\" \n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/plan/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"plan",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/plan/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d25cbd23-714e-4db6-919f-7db007d2e3dc",
								"exec": [
									"pm.test(\"Name is  not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.name).not.eq(undefined);",
									"});",
									"pm.test(\"Id is not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.id).not.eq(undefined);",
									"});",
									"pm.test(\"Body have id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"pm.test(\"Body have name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});",
									"pm.test(\"Blance is 100\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.balance).eq(100);",
									"});",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"plan\", jsonData.id);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c6501109-241d-4c38-8f80-bf424d9409c4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomUserName}}\",\n    \"balance\": 100,\n    \"dateExpiration\":\"2021-09-14\" \n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/plan/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"plan",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/plan/all/",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f6bfeb0b-6b3e-4500-b68d-54aef96a4d8a",
								"exec": [
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b8a3031f-daeb-4953-8157-bd83d28f9d51",
								"exec": [
									"pm.test('Matches plans', () => {",
									"    _.each(pm.response.json(), (arrItem) => {",
									"        pm.expect(arrItem.id).not.eq(undefined);",
									"        pm.expect(arrItem.name).not.eq(undefined);",
									"        pm.expect(arrItem.balance).eq(100);",
									"        pm.expect(arrItem.id).not.eq(undefined);",
									"    })",
									"});",
									"responseJson = JSON.parse(responseBody);",
									"var list = responseJson.length;",
									" pm.expect(list).eq(2);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/plan/all/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"plan",
								"all",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/plan/",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f6bfeb0b-6b3e-4500-b68d-54aef96a4d8a",
								"exec": [
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b8a3031f-daeb-4953-8157-bd83d28f9d51",
								"exec": [
									"pm.test(\"Name is  not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.name).not.eq(undefined);",
									"});",
									"pm.test(\"Id is not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.id).not.eq(undefined);",
									"});",
									"pm.test(\"Body have id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"pm.test(\"Body have name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/plan/{{plan}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"plan",
								"{{plan}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/plan/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41253510-4442-40b1-b5ad-39f677fdafd1",
								"exec": [
									"pm.test(\"Name is  not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.name).not.eq(undefined);",
									"});",
									"pm.test(\"Id is not Null\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.id).not.eq(undefined);",
									"});",
									"pm.test(\"Body have id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"pm.test(\"Body have name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});",
									"pm.test(\"Blance is 200\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.balance).eq(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c2badbcf-4599-47f2-867c-7de9da579b24",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {{$randomUserName}},\n    \"balance\": 200,\n    \"dateExpiration\": \"2021-09-14\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/plan/{{plan}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"plan",
								"{{plan}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/plan/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "706251da-8c5f-400f-a955-c01383aab959",
								"exec": [
									"pm.test(\"Status is deleted\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.status).eq(\"deleted\");",
									"pm.expect(jsonData.rows).eq('1');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "02359001-14fc-4e38-b73c-7778abc9fc67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/plan/{{plan}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"plan",
								"{{plan}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "672bc072-dfa9-4d10-bc15-58ef025d8a0e",
								"exec": [
									"pm.test(\"Status is deleted\", function() {",
									"var jsonData = pm.response.json();",
									"pm.expect(jsonData.status).eq(\"deleted\");",
									"pm.expect(jsonData.rows).eq('1');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0d5b23a7-cc5a-49e1-a378-f71693408e00",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/person/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"person",
								""
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d0886505-5048-4aec-8300-deadd21c8fa4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d6fd0854-9f47-4756-9e40-286bb4d533a2",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6bac0f18-7df2-4532-b115-105778044e91",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "41c6a5dc-c318-4b05-93c1-c2f479d2e43d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}